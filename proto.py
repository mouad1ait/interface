import streamlit as st
import pandas as pd

# --- CONFIGURATION DE LA PAGE ---
st.set_page_config(page_title="Essilor Instruments", layout="wide")

# --- LOGO ---
st.image("logo_essilor_instruments.png", width=150)
st.title("Application Essilor Instruments")
st.write("Gestion des r√©clamations, r√©parations et qualit√©")

# --- MENU ---
menu = ["Accueil", "Service TBS", "Service R√©paration SC", "Instruments & Quality", "Dashboards"]
choice = st.sidebar.radio("Navigation", menu)

# --- ACCUEIL ---
if choice == "Accueil":
    st.header("Pr√©sentation de l'entreprise")
    st.write("""
    Bienvenue dans l'application Essilor Instruments.  
    Cette application permet de g√©rer les r√©clamations clients, les r√©parations et le suivi qualit√©.
    """)
    st.subheader("Produits standards")
    col1, col2 = st.columns(2)
    with col1:
        st.success("Produit VR - Virtual Refraction")
    with col2:
        st.success("Produit VS - Vision Screening")

# --- SERVICE TBS ---
elif choice == "Service TBS":
    st.header("Tableau des r√©clamations clients (TBS)")
    data_tbs = pd.DataFrame({
        "Id_r√©clamation": [1, 2],
        "Mod√®le": ["VR", "VS"],
        "Num√©ro de s√©rie": ["12345", "67890"],
        "Client": ["Opticien A", "Opticien B"],
        "Date r√©clamation": ["2025-07-01", "2025-07-10"],
        "Description d√©faut client": ["Probl√®me d'√©cran", "Erreur calibration"],
        "Analyse TBS": ["En cours", "Compl√®te"],
        "Date d'analyse": ["2025-07-05", "2025-07-12"],
        "Date envoi SC": ["2025-07-07", "2025-07-15"]
    })
    st.dataframe(data_tbs)

    st.info("‚öôÔ∏è Options : Ajouter | Supprimer | Modifier (√† impl√©menter)")

# --- SERVICE R√âPARATION SC ---
elif choice == "Service R√©paration SC":
    st.header("Tableau des r√©clamations clients (SC)")
    data_sc = pd.DataFrame({
        "Id_r√©clamation": [1],
        "Mod√®le": ["VR"],
        "Num√©ro de s√©rie": ["12345"],
        "Client": ["Opticien A"],
        "Date r√©clamation": ["2025-07-01"],
        "Description d√©faut client": ["Probl√®me d'√©cran"],
        "Analyse TBS": ["En cours"],
        "Analyse SC": ["Pi√®ce d√©fectueuse"],
        "D√©fauts constat√©s": ["√âcran HS"],
        "R√©parations effectu√©es": ["Changement √©cran"],
        "Date envoi client": ["2025-07-20"]
    })
    st.dataframe(data_sc)

    st.info("‚öôÔ∏è Options : Ajouter | Supprimer | Modifier (√† impl√©menter)")

# --- INSTRUMENTS & QUALITY ---
elif choice == "Instruments & Quality":
    st.header("Tableau des CAPA")
    data_capa = pd.DataFrame({
        "Id_CAPA": [101],
        "Type de remont√©e": ["R√©clamation client"],
        "Instrument": ["VR"],
        "Date ouverture": ["2025-06-15"],
        "Date analyse": ["2025-06-20"],
        "Date cl√¥ture": ["2025-07-10"],
        "Analyse": ["D√©faut design"],
        "Status": ["Cl√¥tur√©"],
        "Cause racine": ["Conception"],
        "Demande changement": ["Oui"],
        "Indice IPR": [12],
        "Priorit√©": ["Haute"],
        "Urgency": ["√âlev√©e"]
    })
    st.dataframe(data_capa)

    st.info("‚öôÔ∏è Options : Ajouter | Supprimer | Modifier (√† impl√©menter)")

# --- DASHBOARDS ---
elif choice == "Dashboards":
    st.header("Tableaux de bord")
    st.write("üìä Nombre de r√©clamations et indicateurs cl√©s")

    # Exemple KPI
    col1, col2, col3 = st.columns(3)
    with col1:
        st.metric("R√©clamations TBS", 25)
    with col2:
        st.metric("R√©clamations SC", 15)
    with col3:
        st.metric("CAPA Qualit√©", 8)

    st.info("üîß Ici, vous pourrez ajouter des graphiques et KPI d√©taill√©s.")
